{"version":3,"sources":["logo.svg","components/Header.js","components/About.js","components/Home.js","components/ContactForm.js","components/Contact.js","components/Work.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","state","isMenuOpened","handleBurgerIconClick","bind","handleNavLinkClick","toggleNavMenu","this","setState","e","currentTarget","target","nodeName","closestUlEl","parentNode","className","indexOf","headerNavElClassName","to","onClick","exact","activeClassName","React","Component","About","Home","ContactForm","isSubmitted","handleFormSubmit","preventDefault","submit","mainClassName","name","id","style","display","title","action","method","onSubmit","htmlFor","type","rows","cols","value","Contact","Work","href","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8708964a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport './Header.scss';\n\nimport {\n  Link,\n  NavLink\n} from 'react-router-dom';\n\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isMenuOpened: false\n    }\n    this.handleBurgerIconClick = this.handleBurgerIconClick.bind(this);\n    this.handleNavLinkClick = this.handleNavLinkClick.bind(this);\n    this.toggleNavMenu = this.toggleNavMenu.bind(this);\n  }\n\n  toggleNavMenu () {\n    this.setState({\n      isMenuOpened: !this.state.isMenuOpened\n    })\n  }\n\n  handleBurgerIconClick() {\n    this.toggleNavMenu();\n  }\n\n  handleNavLinkClick(e) {\n    const currentTarget = e.target;\n    // exit it if the nodeName of the clicked element is not `A`\n    if (currentTarget.nodeName !== 'A') {\n      return;\n    }\n\n    // select the closest UL element\n    let closestUlEl = currentTarget;\n    while (closestUlEl.nodeName !== 'UL' ) {\n      closestUlEl = closestUlEl.parentNode;\n    }\n    \n    // Close the menu if one of the nav link is clicked\n    if (closestUlEl.className.indexOf('active') >= 0) {\n      this.toggleNavMenu();\n    }\n  }\n\n  render() {\n    const headerNavElClassName = this.state.isMenuOpened ? 'active' : '';\n    \n    return (\n      <div className=\"header\">\n            <h1>\n              <Link to=\"/\">JK</Link>\n            </h1>\n            <ul className={`header--nav ${headerNavElClassName}`} onClick={this.handleNavLinkClick}>\n              <li>\n                <NavLink \n                  exact\n                  to=\"/\" \n                  activeClassName=\"active\"\n                  >\n                    Home\n                </NavLink>\n              </li>\n              <li>\n                <NavLink \n                  to=\"/about\" \n                  activeClassName=\"active\"\n                  >\n                    About\n                </NavLink>\n              </li>\n              <li>\n                <NavLink \n                  to=\"/work\" \n                  activeClassName=\"active\"\n                  >\n                    Work\n                </NavLink>\n              </li>\n              <li>\n                <NavLink \n                  to=\"/contact\" \n                  activeClassName=\"active\"\n                  >\n                    Contact\n                </NavLink>\n              </li>\n            </ul>\n\n            <div onClick={this.handleBurgerIconClick} className=\"header--nav__icon\">\n                <span></span>\n                <span></span>\n                <span></span>\n            </div>\n          </div>\n    );\n  }\n}\n\nexport default Header;","import React from 'react';\nimport './About.scss';\n\n\nclass About extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"about\">\n        <div className=\"text--container\">\n          <h2>About</h2>\n          <p>\n            Hi! My name is Johnson Kit. I am a web developer from Hong Kong and now in London. My previous working experiences were mainly on the front-end and had some experiences in PHP and Ruby on Rails. My web development stack is HTML, CSS, and JavaScript.\n          </p>\n          <p>\n            I like reading books, taking online courses, and joining the meetup group to learn about the latest web development skills.\n          </p>\n          <p>\n            My skills are as below:\n          </p>\n          <p>\n            <u>Programming Languages:</u><br/>\n            HTML/HTML5/Nunjucks, CSS/CSS3/SASS/SCSS/LESS/BEM,\n            JavaScript/TypeScript, PHP, Ruby\n          </p>\n          <p>\n            <u>Libraries / Frameworks:</u><br/>\n            jQuery, React, Node.js, Bootstrap, Ruby on Rails\n          </p>\n          <p>\n            <u>Tools:</u><br/>\n            Git, Gulp, Webpack\n          </p>\n          <p>\n            <u>Testing:</u><br/>\n            Jasmine, Cross-Browser and Cross-Device Testing\n          </p>\n          <p>\n            <u>CMS:</u><br/>\n            WordPress, Adobe Experience Manager, Umbraco, ATG Business Control\n  Center System\n          </p>\n          <p>\n            <u>Web development:</u><br/>\n            Responsive Web Development, SEO\n          </p>\n          <p>\n            <u>Languages:</u><br/>\n            Intermediate English, native Cantonese speaker, and fluent Mandarin\n          </p>\n          <p>\n            Apart from work, I like Chinese tea culture, calligraphy, meditation, and yoga.\n          </p>\n        </div>\n        \n      </div>\n    );\n  }\n}\n\nexport default About;","import React from 'react';\nimport './Home.scss';\nimport About from './About';\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"home\">\n        {/* <h2>Home</h2> */}\n        <div className=\"hero\">\n          <h2>Johnson Kit<br />Web Developer<br />From Hong Kong<br />Now in London</h2>\n        </div>\n        <About />\n      </div>\n    );\n  }\n}\n\nexport default Home;","import React from 'react';\nimport './ContactForm.scss';\n\nclass ContactForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isSubmitted: false\n    }\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n  }\n\n  handleFormSubmit(e) {\n    e.preventDefault();\n    e.target.submit();\n\n    this.setState({\n      isSubmitted: true\n    })\n  }\n\n  render() {\n    const { isSubmitted } = this.state;\n    const mainClassName = isSubmitted ? 'isSubmitted' : '';\n    return (\n      <div className={`contact-form ${mainClassName}`}>\n        <div className=\"form--wrapper\">\n          <iframe name=\"hidden_iframe\" id=\"hidden_iframe\" style={{display: 'none'}} title='formIframe'></iframe>\n          <form action=\"https://script.google.com/macros/s/AKfycbyiX2vxyioc-TzTntLbuwsP-STsyNuIignP_jKnIo9Zb9gzQUkf/exec\" method=\"POST\" target=\"hidden_iframe\" onSubmit={this.handleFormSubmit}>\n            <label htmlFor=\"name\">\n              <span className=\"label-title\">Name:</span> \n              <input type=\"text\" name=\"name\" id=\"name\" />\n            </label>\n            <label htmlFor=\"email\">\n              <span className=\"label-title\">Email:</span> \n              <input type=\"email\" name=\"email\" id=\"email\" />\n            </label>\n            <label htmlFor=\"message\">\n              <span className=\"label-title\">Message:</span> \n              <textarea name=\"message\" id=\"message\" rows=\"10\" cols=\"50\" />\n            </label>\n            <input type=\"hidden\" name=\"method\" value=\"CREATE_DATA\" />\n            <button id=\"submit-btn\" className=\"submit\" type=\"submit\">Send</button>\n          </form>\n        </div>\n        <div className='thank-you--wrapper'>\n          Thanks for your message.\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ContactForm;","import React from 'react';\nimport './Contact.scss';\nimport ContactForm from './ContactForm';\n\n\nclass Contact extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"contact\">\n        <div className=\"text--container\">\n          <h2>Contact</h2>\n          <ContactForm />\n        </div>\n        \n      </div>\n    );\n  }\n}\n\nexport default Contact;","import React from 'react';\nimport './Work.scss';\n\n\nclass Work extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"work\">\n        <div className=\"text--container\">\n          <h2>Work</h2>\n          <p>\n          Past few years, I have had the pleasure to work with the companies, including EF Education First, Tofugear, and LaneCrawford.\n\n          If you would like to see some examples, please drop me a message. I'll send you some examples.\n\n          </p>\n          <h2>Project</h2>\n          <ul>\n            <li>\n              <a href=\"https://johnsonkit.github.io/responsive-web-page-sample/dist/\" target=\"_blank\">Responsive Web Page Sample (HTML, CSS, and JavaScript)</a>\n            </li>\n            <li>\n              <a href=\"https://johnsonkit.github.io/tic-tac-toe-react/\" target=\"_blank\">Tic Tac Toe (React)</a>\n            </li>\n            <li>\n              <a href=\"https://johnsonkit.github.io/simon-game/dist/\" target=\"_blank\">Simon Game (HTML, CSS, and JavaScript)</a>\n            </li>\n            <li>\n              <a href=\"https://johnsonkit.github.io/lightweight-web-script/\" target=\"_blank\">Lightweight Web Script - ScrollTo effect (pure JavaScript)</a>\n            </li>\n            <li>\n              <a href=\"https://github.com/johnsonkit/batch-process-images\" target=\"_blank\">Batch images processing (gulp)</a>\n            </li>\n            <li>\n              <a href=\"https://github.com/johnsonkit/simple-frontend-starter\" target=\"_blank\">Custom front-end development template (gulp)</a>\n            </li>\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Work;","import React from 'react';\nimport logo from './logo.svg';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Switch\n} from 'react-router-dom';\nimport './App.scss';\nimport Header from './components/Header';\nimport Home from './components/Home';\nimport About from './components/About';\nimport Contact from './components/Contact';\nimport Work from './components/Work';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"app\">\n        <div className=\"app--container\">\n          \n          <Header />\n\n          <div className=\"main\">\n            <Switch>\n              <Route path=\"/\" exact component={Home}/>\n              {/* <Route path=\"/home\" component={Home}/> */}\n              <Route path=\"/about\" exact component={About}/> \n              <Route path=\"/work\" exact component={Work}/>\n              <Route path=\"/contact\" exact component={Contact}/>\n            </Switch>\n          </div>\n\n          <div className=\"footer\">\n\n          </div>\n\n        </div>\n      </div>\n\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}